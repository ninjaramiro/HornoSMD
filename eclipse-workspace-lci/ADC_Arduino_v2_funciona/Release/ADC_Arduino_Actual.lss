
ADC_Arduino_Actual.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000292  00000326  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000292  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  00800100  00800100  00000326  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000326  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000338  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  0000096c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000001a  00000000  00000000  00000f0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 eb 00 	jmp	0x1d6	; 0x1d6 <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a9 31       	cpi	r26, 0x19	; 25
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 be 00 	call	0x17c	; 0x17c <main>
  88:	0c 94 47 01 	jmp	0x28e	; 0x28e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 23 01 	jmp	0x246	; 0x246 <__vector_default>

00000090 <ReadADC_7380>:
  90:	cf 93       	push	r28
  92:	29 98       	cbi	0x05, 1	; 5
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	0e 94 41 01 	call	0x282	; 0x282 <SPIWrite>
  9a:	c8 2f       	mov	r28, r24
  9c:	8f ef       	ldi	r24, 0xFF	; 255
  9e:	0e 94 41 01 	call	0x282	; 0x282 <SPIWrite>
  a2:	29 9a       	sbi	0x05, 1	; 5
  a4:	2c 2f       	mov	r18, r28
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	32 2f       	mov	r19, r18
  aa:	22 27       	eor	r18, r18
  ac:	a9 01       	movw	r20, r18
  ae:	48 2b       	or	r20, r24
  b0:	ca 01       	movw	r24, r20
  b2:	cf 91       	pop	r28
  b4:	08 95       	ret

000000b6 <ReadADCEx>:
  b6:	cf 93       	push	r28
  b8:	c8 2f       	mov	r28, r24
  ba:	84 30       	cpi	r24, 0x04	; 4
  bc:	10 f0       	brcs	.+4      	; 0xc2 <ReadADCEx+0xc>
  be:	87 e0       	ldi	r24, 0x07	; 7
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <ReadADCEx+0xe>
  c2:	86 e0       	ldi	r24, 0x06	; 6
  c4:	29 98       	cbi	0x05, 1	; 5
  c6:	0e 94 41 01 	call	0x282	; 0x282 <SPIWrite>
  ca:	8c 2f       	mov	r24, r28
  cc:	82 95       	swap	r24
  ce:	88 0f       	add	r24, r24
  d0:	88 0f       	add	r24, r24
  d2:	80 7c       	andi	r24, 0xC0	; 192
  d4:	0e 94 41 01 	call	0x282	; 0x282 <SPIWrite>
  d8:	c8 2f       	mov	r28, r24
  da:	8f ef       	ldi	r24, 0xFF	; 255
  dc:	0e 94 41 01 	call	0x282	; 0x282 <SPIWrite>
  e0:	29 9a       	sbi	0x05, 1	; 5
  e2:	cf 70       	andi	r28, 0x0F	; 15
  e4:	2c 2f       	mov	r18, r28
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	32 2f       	mov	r19, r18
  ea:	22 27       	eor	r18, r18
  ec:	a9 01       	movw	r20, r18
  ee:	48 2b       	or	r20, r24
  f0:	ca 01       	movw	r24, r20
  f2:	cf 91       	pop	r28
  f4:	08 95       	ret

000000f6 <InitADCEx>:
  f6:	0c 94 2d 01 	jmp	0x25a	; 0x25a <SPIInit>

000000fa <Inicio_USART>:
  fa:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 104:	82 e0       	ldi	r24, 0x02	; 2
 106:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 10a:	88 e1       	ldi	r24, 0x18	; 24
 10c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 110:	86 e0       	ldi	r24, 0x06	; 6
 112:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 116:	08 95       	ret

00000118 <USART_Transmit>:
 118:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 11c:	95 ff       	sbrs	r25, 5
 11e:	fc cf       	rjmp	.-8      	; 0x118 <USART_Transmit>
 120:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 124:	08 95       	ret

00000126 <USART_Receive>:
 126:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 12a:	87 ff       	sbrs	r24, 7
 12c:	fc cf       	rjmp	.-8      	; 0x126 <USART_Receive>
 12e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 132:	08 95       	ret

00000134 <USART_Flush>:
 134:	8f e1       	ldi	r24, 0x1F	; 31
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	20 91 c0 00 	lds	r18, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 13c:	27 ff       	sbrs	r18, 7
 13e:	04 c0       	rjmp	.+8      	; 0x148 <USART_Flush+0x14>
 140:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	c1 f7       	brne	.-16     	; 0x138 <USART_Flush+0x4>
 148:	08 95       	ret

0000014a <Inicio_Puertos>:
 14a:	25 9a       	sbi	0x04, 5	; 4
 14c:	20 9a       	sbi	0x04, 0	; 4
 14e:	23 9a       	sbi	0x04, 3	; 4
 150:	24 98       	cbi	0x04, 4	; 4
 152:	2c 98       	cbi	0x05, 4	; 5
 154:	25 9a       	sbi	0x04, 5	; 4
 156:	57 9a       	sbi	0x0a, 7	; 10
 158:	5f 9a       	sbi	0x0b, 7	; 11
 15a:	56 9a       	sbi	0x0a, 6	; 10
 15c:	5e 9a       	sbi	0x0b, 6	; 11
 15e:	52 98       	cbi	0x0a, 2	; 10
 160:	5a 98       	cbi	0x0b, 2	; 11
 162:	51 9a       	sbi	0x0a, 1	; 10
 164:	50 98       	cbi	0x0a, 0	; 10
 166:	58 98       	cbi	0x0b, 0	; 11
 168:	53 98       	cbi	0x0a, 3	; 10
 16a:	5b 98       	cbi	0x0b, 3	; 11
 16c:	08 95       	ret

0000016e <Inicio_Interrupcion0>:
 16e:	82 e0       	ldi	r24, 0x02	; 2
 170:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	8d bb       	out	0x1d, r24	; 29
 178:	08 95       	ret

0000017a <Inicio_Timer0>:
 17a:	08 95       	ret

0000017c <main>:
 17c:	f8 94       	cli
 17e:	15 ba       	out	0x15, r1	; 21
 180:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
 184:	1b ba       	out	0x1b, r1	; 27
 186:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 18a:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 18e:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 192:	0e 94 a5 00 	call	0x14a	; 0x14a <Inicio_Puertos>
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	0e 94 7d 00 	call	0xfa	; 0xfa <Inicio_USART>
 19e:	0e 94 b7 00 	call	0x16e	; 0x16e <Inicio_Interrupcion0>
 1a2:	0e 94 7b 00 	call	0xf6	; 0xf6 <InitADCEx>
 1a6:	f8 94       	cli
 1a8:	0e 94 9a 00 	call	0x134	; 0x134 <USART_Flush>
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	4e 99       	sbic	0x09, 6	; 9
 1b0:	0c c0       	rjmp	.+24     	; 0x1ca <main+0x4e>
 1b2:	81 11       	cpse	r24, r1
 1b4:	09 c0       	rjmp	.+18     	; 0x1c8 <main+0x4c>
 1b6:	2d 9a       	sbi	0x05, 5	; 5
 1b8:	28 9a       	sbi	0x05, 0	; 5
 1ba:	8c e2       	ldi	r24, 0x2C	; 44
 1bc:	0e 94 8c 00 	call	0x118	; 0x118 <USART_Transmit>
 1c0:	8c e2       	ldi	r24, 0x2C	; 44
 1c2:	0e 94 8c 00 	call	0x118	; 0x118 <USART_Transmit>
 1c6:	78 94       	sei
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	4f 99       	sbic	0x09, 7	; 9
 1cc:	f0 cf       	rjmp	.-32     	; 0x1ae <main+0x32>
 1ce:	2d 98       	cbi	0x05, 5	; 5
 1d0:	28 98       	cbi	0x05, 0	; 5
 1d2:	f8 94       	cli
 1d4:	eb cf       	rjmp	.-42     	; 0x1ac <main+0x30>

000001d6 <__vector_1>:
 1d6:	1f 92       	push	r1
 1d8:	0f 92       	push	r0
 1da:	0f b6       	in	r0, 0x3f	; 63
 1dc:	0f 92       	push	r0
 1de:	11 24       	eor	r1, r1
 1e0:	2f 93       	push	r18
 1e2:	3f 93       	push	r19
 1e4:	4f 93       	push	r20
 1e6:	5f 93       	push	r21
 1e8:	6f 93       	push	r22
 1ea:	7f 93       	push	r23
 1ec:	8f 93       	push	r24
 1ee:	9f 93       	push	r25
 1f0:	af 93       	push	r26
 1f2:	bf 93       	push	r27
 1f4:	ef 93       	push	r30
 1f6:	ff 93       	push	r31
 1f8:	0e 94 48 00 	call	0x90	; 0x90 <ReadADC_7380>
 1fc:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <result+0x1>
 200:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <result>
 204:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <result>
 208:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <result+0x1>
 20c:	89 2f       	mov	r24, r25
 20e:	0e 94 8c 00 	call	0x118	; 0x118 <USART_Transmit>
 212:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <result>
 216:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <result+0x1>
 21a:	0e 94 8c 00 	call	0x118	; 0x118 <USART_Transmit>
 21e:	8c e2       	ldi	r24, 0x2C	; 44
 220:	0e 94 8c 00 	call	0x118	; 0x118 <USART_Transmit>
 224:	ff 91       	pop	r31
 226:	ef 91       	pop	r30
 228:	bf 91       	pop	r27
 22a:	af 91       	pop	r26
 22c:	9f 91       	pop	r25
 22e:	8f 91       	pop	r24
 230:	7f 91       	pop	r23
 232:	6f 91       	pop	r22
 234:	5f 91       	pop	r21
 236:	4f 91       	pop	r20
 238:	3f 91       	pop	r19
 23a:	2f 91       	pop	r18
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <__vector_default>:
 246:	1f 92       	push	r1
 248:	0f 92       	push	r0
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	0f 92       	push	r0
 24e:	11 24       	eor	r1, r1
 250:	0f 90       	pop	r0
 252:	0f be       	out	0x3f, r0	; 63
 254:	0f 90       	pop	r0
 256:	1f 90       	pop	r1
 258:	18 95       	reti

0000025a <SPIInit>:
 25a:	84 b1       	in	r24, 0x04	; 4
 25c:	8c 62       	ori	r24, 0x2C	; 44
 25e:	84 b9       	out	0x04, r24	; 4
 260:	2a 9a       	sbi	0x05, 2	; 5
 262:	21 9a       	sbi	0x04, 1	; 4
 264:	29 9a       	sbi	0x05, 1	; 5
 266:	8c b5       	in	r24, 0x2c	; 44
 268:	88 65       	ori	r24, 0x58	; 88
 26a:	8c bd       	out	0x2c, r24	; 44
 26c:	8d b5       	in	r24, 0x2d	; 45
 26e:	81 60       	ori	r24, 0x01	; 1
 270:	8d bd       	out	0x2d, r24	; 45
 272:	08 95       	ret

00000274 <SPIClose>:
 274:	8c b5       	in	r24, 0x2c	; 44
 276:	8f 7b       	andi	r24, 0xBF	; 191
 278:	8c bd       	out	0x2c, r24	; 44
 27a:	84 b1       	in	r24, 0x04	; 4
 27c:	87 7d       	andi	r24, 0xD7	; 215
 27e:	84 b9       	out	0x04, r24	; 4
 280:	08 95       	ret

00000282 <SPIWrite>:
 282:	8e bd       	out	0x2e, r24	; 46
 284:	0d b4       	in	r0, 0x2d	; 45
 286:	07 fe       	sbrs	r0, 7
 288:	fd cf       	rjmp	.-6      	; 0x284 <SPIWrite+0x2>
 28a:	8e b5       	in	r24, 0x2e	; 46
 28c:	08 95       	ret

0000028e <_exit>:
 28e:	f8 94       	cli

00000290 <__stop_program>:
 290:	ff cf       	rjmp	.-2      	; 0x290 <__stop_program>
